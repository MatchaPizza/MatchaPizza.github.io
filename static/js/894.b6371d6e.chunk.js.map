{"version":3,"file":"static/js/894.b6371d6e.chunk.js","mappings":"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","sources":["components/ClickableCard/index.tsx","components/IconButton/index.tsx","hooks/useTabletView.tsx","hooks/useWindowWidth.tsx","components/ClickableText/index.tsx","components/Button/index.tsx","pages/index.tsx"],"sourcesContent":["import { CSSProperties } from 'react'\r\nimport './index.css'\r\n\r\nconst ClickableCard = ({\r\n  children,\r\n  styles,\r\n  onClick,\r\n}: {\r\n  children: any\r\n  styles?: CSSProperties\r\n  onClick?: () => void\r\n}) => {\r\n  return (\r\n    <div className=\"clickable-card\" style={styles} onClick={onClick}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ClickableCard\r\n","import { CSSProperties } from 'react'\r\nimport './index.css'\r\n\r\nconst IconButton = ({\r\n  icon,\r\n  onClick,\r\n  styles,\r\n}: {\r\n  icon: string\r\n  onClick?: () => void\r\n  styles?: CSSProperties\r\n}) => {\r\n  return (\r\n    <div className=\"icon-button\" onClick={onClick} style={styles}>\r\n      <img className=\"icon-button-icon\" src={icon} alt=\"icon-button-icon\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IconButton\r\n","import { useEffect, useState } from 'react'\r\n\r\nfunction getWindowWidth() {\r\n  return window.innerWidth\r\n}\r\n\r\nconst useTabletView = () => {\r\n  const [windowWidth, setWindowWidth] = useState(\r\n    getWindowWidth(),\r\n  )\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowWidth(getWindowWidth())\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [])\r\n\r\n  return windowWidth <= 768\r\n}\r\n\r\nexport default useTabletView\r\n","import { useEffect, useState } from 'react'\r\n\r\nfunction getWindowWidth() {\r\n  return window.innerWidth\r\n}\r\n\r\nconst useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth())\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowWidth(getWindowWidth())\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [])\r\n\r\n  return windowWidth\r\n}\r\n\r\nexport default useWindowWidth\r\n","import { CSSProperties } from 'react'\r\nimport './index.css'\r\n\r\nconst ClickableText = ({\r\n  styles,\r\n  children,\r\n  onClick,\r\n}: {\r\n  styles?: CSSProperties\r\n  children: string\r\n  onClick?: () => void\r\n}) => {\r\n  return (\r\n    <p style={styles} className=\"clickable-text\" onClick={onClick}>\r\n      {children}\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default ClickableText\r\n","import { CSSProperties } from 'react'\r\nimport './index.css'\r\n\r\nconst Button = ({\r\n  children,\r\n  onClick,\r\n  styles,\r\n}: {\r\n  children: string\r\n  onClick?: () => void\r\n  styles?: CSSProperties\r\n}) => {\r\n  return (\r\n    <div className=\"button\" onClick={onClick} style={styles}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import ClickableText from '@components/ClickableText'\r\nimport IconButton from '@components/IconButton'\r\nimport { CSSProperties, Fragment, useRef } from 'react'\r\nimport useTabletView from '@hooks/useTabletView'\r\nimport ClickableCard from '@components/ClickableCard'\r\nimport useWindowWidth from '@hooks/useWindowWidth'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Button from '@components/Button'\r\n\r\nconst MainPage = () => {\r\n  const mainRef = useRef<HTMLDivElement>(null)\r\n  const tabletView = useTabletView()\r\n  const windowWidth = useWindowWidth()\r\n  const navigate = useNavigate()\r\n\r\n  const styles: Record<string, Record<string, CSSProperties>> = {\r\n    background: {\r\n      image: {\r\n        minHeight: 'calc(100vh - 86px)',\r\n        backgroundImage: 'url(\"/images/background.jpg\")',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        position: 'relative',\r\n      },\r\n      mainTextBox: {\r\n        minHeight: 'calc(100vh - 86px)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        flexDirection: 'column',\r\n        gap: 16,\r\n        textAlign: 'center',\r\n      },\r\n      mainText: {\r\n        fontSize: tabletView ? 48 : 64,\r\n        fontWeight: 'bold',\r\n      },\r\n      secondaryText: {\r\n        fontSize: tabletView ? 16 : 32,\r\n        fontWeight: 'bold',\r\n        display: 'flex',\r\n        gap: 8,\r\n        flexWrap: 'wrap',\r\n      },\r\n      imageText: {\r\n        fontSize: 16,\r\n        position: 'absolute',\r\n        bottom: 8,\r\n        left: 8,\r\n      },\r\n      scrollButton: {\r\n        position: 'absolute',\r\n        bottom: 32,\r\n        right: 32,\r\n      },\r\n    },\r\n    main: {\r\n      container: {\r\n        padding: `128px ${windowWidth <= 1400 ? 16 : 128}px 32px`,\r\n      },\r\n      titleText: {\r\n        fontSize: tabletView ? 48 : 64,\r\n        fontWeight: 'bold',\r\n      },\r\n    },\r\n    content: {\r\n      container: {\r\n        marginTop: 16,\r\n        display: 'grid',\r\n        gridTemplateColumns: windowWidth <= 1400 ? '100%' : '50% 50%',\r\n      },\r\n    },\r\n    card: {\r\n      container: {\r\n        margin: 8,\r\n        padding: 16,\r\n      },\r\n      titleText: {\r\n        fontSize: 32,\r\n        fontWeight: 'bold',\r\n        marginBottom: 8,\r\n      },\r\n      image: {\r\n        width: '100%',\r\n        height: 300,\r\n        objectFit: 'cover',\r\n        backgroundColor: 'gray',\r\n      },\r\n      content: {\r\n        marginTop: 8,\r\n      },\r\n    },\r\n  }\r\n\r\n  const jumpToMainStart = () => {\r\n    mainRef.current?.scrollIntoView()\r\n  }\r\n\r\n  const openMatchaPizzaPage = () => {\r\n    window.open('https://github.com/matchapizza')\r\n  }\r\n\r\n  const openJoakPage = () => {\r\n    window.open('https://github.com/joakqq')\r\n  }\r\n\r\n  const redirectMainPage = () => {\r\n    window.location.href = 'https://joakqq.github.io'\r\n  }\r\n\r\n  const navigateCustomKeyboardsPage = () => {\r\n    navigate('/custom-keyboards')\r\n  }\r\n\r\n  const navigateCodingPage = () => {\r\n    navigate('/coding')\r\n  }\r\n\r\n  const navigateGamesPage = () => {\r\n    navigate('/games')\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={styles.background.image}>\r\n        <div style={styles.background.mainTextBox}>\r\n          <p style={styles.background.mainText}>Hobby Page</p>\r\n          <div style={styles.background.secondaryText}>\r\n            <ClickableText onClick={openMatchaPizzaPage}>\r\n              MatchaPizza\r\n            </ClickableText>\r\n            <p>aka</p>\r\n            <ClickableText onClick={openJoakPage}>Joak</ClickableText>\r\n          </div>\r\n          <Button onClick={redirectMainPage}>🌌 Main Page</Button>\r\n        </div>\r\n        <p style={styles.background.imageText}>Joak 🍵 Pizza 🍕 React 😂</p>\r\n        <IconButton\r\n          styles={styles.background.scrollButton}\r\n          icon=\"images/icons/down-arrow.png\"\r\n          onClick={jumpToMainStart}\r\n        />\r\n      </div>\r\n      <div ref={mainRef} style={styles.main.container}>\r\n        <p style={styles.main.titleText}>My Hobbies</p>\r\n        <div style={styles.content.container}>\r\n          <ClickableCard\r\n            styles={styles.card.container}\r\n            onClick={navigateCustomKeyboardsPage}\r\n          >\r\n            <p style={styles.card.titleText}>Custom Keyboards</p>\r\n            <img\r\n              style={styles.card.image}\r\n              src=\"/images/custom-keyboards.webp\"\r\n              alt=\"custom-keyboards\"\r\n              loading=\"lazy\"\r\n            />\r\n            <p style={styles.card.content}>\r\n              I love building custom keyboards, and type on them\r\n            </p>\r\n          </ClickableCard>\r\n          <ClickableCard\r\n            styles={styles.card.container}\r\n            onClick={navigateCodingPage}\r\n          >\r\n            <p style={styles.card.titleText}>Coding</p>\r\n            <img\r\n              style={styles.card.image}\r\n              src=\"/images/coding.jpg\"\r\n              alt=\"coding\"\r\n              loading=\"lazy\"\r\n            />\r\n            <p style={styles.card.content}>\r\n              I like coding, especially in AI and NLP\r\n            </p>\r\n          </ClickableCard>\r\n          <ClickableCard\r\n            styles={styles.card.container}\r\n            onClick={navigateGamesPage}\r\n          >\r\n            <p style={styles.card.titleText}>Games</p>\r\n            <img\r\n              style={styles.card.image}\r\n              src=\"/images/games.jpg\"\r\n              alt=\"games\"\r\n              loading=\"lazy\"\r\n            />\r\n            <p style={styles.card.content}>\r\n              Althrough I don't play a lot games, I do watch people play games\r\n            </p>\r\n          </ClickableCard>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default MainPage\r\n"],"names":["children","styles","onClick","className","style","icon","src","alt","getWindowWidth","window","innerWidth","useState","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","removeEventListener","mainRef","useRef","tabletView","useTabletView","useWindowWidth","navigate","useNavigate","background","image","minHeight","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","position","mainTextBox","display","alignItems","justifyContent","height","flexDirection","gap","textAlign","mainText","fontSize","fontWeight","secondaryText","flexWrap","imageText","bottom","left","scrollButton","right","main","container","padding","titleText","content","marginTop","gridTemplateColumns","card","margin","marginBottom","width","objectFit","backgroundColor","Fragment","open","location","href","IconButton","current","scrollIntoView","ref","ClickableCard","loading"],"sourceRoot":""}